$ docker search httpd
$ docker pull httpd
$ docker images httpd


www 目录将映射为 apache 容器配置的应用程序目录。
logs 目录将映射为 apache 容器的日志目录。
conf 目录里的配置文件将映射为 apache 容器的配置文件。

$ mkdir -p  ~/apache/www ~/apache/logs ~/apache/conf
$ cd ~/apache/
$ docker run -p 80:80 -v $PWD/www/:/usr/local/apache2/htdocs/ \
-v $PWD/conf/httpd.conf:/usr/local/apache2/conf/httpd.conf \
-v $PWD/logs/:/usr/local/apache2/logs/ -d httpd

-p 80:80:
    第一个 80 端口为主机端口，后面一个是容器端口，效果为将容器的 80 端口映射到主机的 80 端口。
-v $PWD/www/:/usr/local/apache2/htdocs/: 
    将主机中当前目录下的 www 目录挂载到容器的 /usr/local/apache2/htdocs/。
-v $PWD/conf/httpd.conf:/usr/local/apache2/conf/httpd.conf: 
    将主机中当前目录下的 conf/httpd.conf 文件挂载到容器的 /usr/local/apache2/conf/httpd.conf。
-v $PWD/logs/:/usr/local/apache2/logs/: 
    将主机中当前目录下的 logs 目录挂载到容器的 /usr/local/apache2/logs/。


进入创建的 apache 目录，创建 Dockerfile。
$ docker build -t httpd .

COPY httpd-foreground /usr/local/bin/ 是将当前目录下的httpd-foreground拷贝到镜像里，
作为httpd服务的启动脚本

sudo gedit httpd-foreground
#!/bin/bash
set -e

# Apache gets grumpy about PID files pre-existing
rm -f /usr/local/apache2/logs/httpd.pid

exec httpd -DFOREGROUND


$ chmod +x httpd-foreground


$ docker images httpd





192.168.239.130








