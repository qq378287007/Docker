$ sudo docker run ubuntu:15.10 /bin/echo "Hello world"
docker: 
    Docker的二进制执行文件。
run: 
    与docker组合来运行一个容器。
ubuntu:15.10 
    指定要运行的镜像，Docker首先从本地主机上查找镜像是否存在，如果不存在，Docker就会从镜像仓库Docker Hub下载公共镜像。
/bin/echo "Hello world": 
    在启动的容器里执行的命令
Docker 以 ubuntu15.10 镜像创建一个新容器，然后在容器里执行 bin/echo "Hello world"，然后输出结果。

# 运行交互式的容器
$ sudo docker run -i -t ubuntu:15.10 /bin/bash
-t: 
    在新容器内指定一个伪终端或终端。
-i: 
    允许你对容器内的标准输入 (STDIN) 进行交互。
#  cat /proc/version
#  exit
exit命令或者使用 CTRL+D 来退出容器。

# 启动容器（后台模式）
$ sudo docker run -d ubuntu:15.10 /bin/sh -c "while true; do echo hello world; sleep 1; done"
2b1b7a428627c51ab8810d541d759f072b4fc75487eed05812646b8534a2fe63
这个长字符串叫做容器ID

$ sudo docker ps
CONTAINER ID: 
    容器 ID。
IMAGE: 
    使用的镜像。
COMMAND: 
    启动容器时运行的命令。
CREATED: 
    容器的创建时间。
STATUS: 
    容器状态。
    created（已创建）
    restarting（重启中）
    running 或 Up（运行中）
    removing（迁移中）
    paused（暂停）
    exited（停止）
    dead（死亡）
PORTS: 
    容器的端口信息和使用的连接类型（tcp\udp）。
NAMES: 
    自动分配的容器名称。

# 查看容器内的标准输出：
$ sudo docker logs 2b1b7a428627


# 停止容器
$ docker stop 2b1b7a428627
$ docker ps

